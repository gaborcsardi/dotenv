% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dotenv-package.r
\name{load_dot_env}
\alias{load_dot_env}
\alias{dotenv_values}
\title{Load variables from the specified file}
\usage{
load_dot_env(file = ".env")

dotenv_values(file = ".env")
}
\arguments{
\item{file}{The name of the file to use.}
}
\description{
Load variables from the specified file either into environment variables 
or into a list.
}
\details{
The file is parsed line by line, and line is expected
to have one of the following formats:
\preformatted{VARIABLE=value
VARIABLE2="quoted value"
VARIABLE3='another quoted variable'
# Comment line
export EXPORTED="exported variable"
export EXPORTED2=another}

In more details:
\itemize{
  \item A leading \code{export} is ignored, to keep the file
     compatible with Unix shells.
  \item No whitespace is allowed right before or after the
     equal sign, again, to promote compatilibity with Unix shells.
  \item No multi-line variables are supported currently. The
     file is strictly parsed line by line.
  \item Unlike for Unix shells, unquoted values are \emph{not}
     terminated by whitespace.
  \item Comments start with \code{#}, without any leading
     whitespace. You cannot mix variable definitions and
     comments in the same line.
  \item Empty lines (containing whitespace only) are ignored.
}

It is suggested to keep the file in a form that is parsed the
same way with \code{dotenv} and \code{bash} (or other shells).
}
\section{Functions}{
\itemize{
\item \code{load_dot_env()}: Load variables defined in the given file, into environment variables

\item \code{dotenv_values()}: Load variables defined in the given file, into a list

}}
\examples{
# Remove, if it exists
Sys.unsetenv("dotenvexamplefoo")
Sys.getenv("dotenvexamplefoo")

# Load from a file ...
tmp <- tempfile()
cat("dotenvexamplefoo=bar\n", file = tmp)
# ... into a list
vars <- dotenv_values(tmp)
vars$dotenvexamplefoo
# ... into environment variables
load_dot_env(tmp)
Sys.getenv("dotenvexamplefoo")

# Clean up
unlink(tmp)
}
